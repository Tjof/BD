//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BD.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BAZANOWEntities : DbContext
    {
        public BAZANOWEntities()
            : base("name=BAZANOWEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Аптеки> Аптеки { get; set; }
        public virtual DbSet<Ассортимент_товара> Ассортимент_товара { get; set; }
        public virtual DbSet<Виды_Транспорта> Виды_Транспорта { get; set; }
        public virtual DbSet<МаршрутыОстановки> МаршрутыОстановки { get; set; }
        public virtual DbSet<Объекты> Объекты { get; set; }
        public virtual DbSet<Остановки> Остановки { get; set; }
        public virtual DbSet<Пользователи> Пользователи { get; set; }
        public virtual DbSet<ПользователиОбъекты> ПользователиОбъекты { get; set; }
        public virtual DbSet<Транспортные_маршруты> Транспортные_маршруты { get; set; }
        public virtual DbSet<Улицы> Улицы { get; set; }
        public virtual DbSet<Формы_упаковки> Формы_упаковки { get; set; }
        public virtual DbSet<Лекарство> Лекарство { get; set; }
        public virtual DbSet<Статистика_поиска> Статистика_поиска { get; set; }
    
        public virtual ObjectResult<GetRoutes_Result> GetRoutes(Nullable<int> id_grud, Nullable<int> id_ost)
        {
            var id_grudParameter = id_grud.HasValue ?
                new ObjectParameter("id_grud", id_grud) :
                new ObjectParameter("id_grud", typeof(int));
    
            var id_ostParameter = id_ost.HasValue ?
                new ObjectParameter("id_ost", id_ost) :
                new ObjectParameter("id_ost", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoutes_Result>("GetRoutes", id_grudParameter, id_ostParameter);
        }
    
        public virtual ObjectResult<GetRoutes_Result> GetRoutes1(Nullable<int> id_grud, Nullable<int> id_ost)
        {
            var id_grudParameter = id_grud.HasValue ?
                new ObjectParameter("id_grud", id_grud) :
                new ObjectParameter("id_grud", typeof(int));
    
            var id_ostParameter = id_ost.HasValue ?
                new ObjectParameter("id_ost", id_ost) :
                new ObjectParameter("id_ost", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoutes_Result>("GetRoutes1", id_grudParameter, id_ostParameter);
        }
    }
}
